// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  username      String        @unique
  password      String
  accountType   AccountType   @map("account_type")
  contexts      Context[]
  tasks         Task[]
  projects      Project[]
  createdAt     DateTime      @default(now()) @db.Timestamp(6) @map("created_at")
  updatedAt     DateTime      @default(now()) @db.Timestamp(6) @map("updated_at")
}

model Context {
  id            Int           @id @default(autoincrement())
  name          String
  description   String?
  ownerId       Int           @map("owner_id")
  owner         User          @relation(fields: [ownerId], references: [id])
  order         Float
  role          ContextRole   @default(NONE)
  tasks         Task[]
  createdAt     DateTime      @default(now()) @db.Timestamp(6) @map("created_at")
  updatedAt     DateTime      @default(now()) @db.Timestamp(6) @map("updated_at")
}

model Project {
  id            Int           @id @default(autoincrement())
  title         String        @db.VarChar(125)
  description   String?       @db.VarChar(3000)
  dueDate       DateTime?     @db.Timestamp(6) @map("due_date")
  completed     Boolean       @default(false)
  priority      Int           @default(0)
  ownerId       Int           @map("owner_id")
  owner         User          @relation(fields: [ownerId], references: [id])
  tasks         Task[]
  createdAt     DateTime      @default(now()) @db.Timestamp(6) @map("created_at")
  updatedAt     DateTime      @default(now()) @db.Timestamp(6) @map("updated_at")
}

model Task {
  id            Int           @id @default(autoincrement())
  title         String        @db.VarChar(125)
  description   String?       @db.VarChar(3000)
  dueDate       DateTime?     @db.Timestamp(6) @map("due_date")
  completed     Boolean       @default(false)
  priority      Int           @default(0)
  ownerId       Int           @map("owner_id")
  owner         User          @relation(fields: [ownerId], references: [id])
  contextId     Int           @map("context_id")
  context       Context       @relation(fields: [contextId], references: [id])
  contextOrder  Float?        @map("context_order")
  projectId     Int?          @map("project_id")
  project       Project?      @relation(fields: [projectId], references: [id])
  projectOrder  Float?        @map("project_order")
  isActive      Boolean       @default(true) @map("is_active")
  createdAt     DateTime      @default(now()) @db.Timestamp(6) @map("created_at")
  updatedAt     DateTime      @default(now()) @db.Timestamp(6) @map("updated_at")
}

enum AccountType {
  FREE
  PAID
  ADMIN
  SUPER_ADMIN
}

enum ContextRole {
  NONE
  INBOX
  WAITING
}
